+++ src/libcxx/src/CMakeLists.txt	2023-01-31 11:03:16.216273229 +0100
@@ -178,26 +178,26 @@
   cxx_set_common_defines(cxx_shared)
 
   # Link against LLVM libunwind
-  if (LIBCXXABI_USE_LLVM_UNWINDER)
-    if (NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_shared OR HAVE_LIBUNWIND))
-      target_link_libraries(cxx_shared PUBLIC unwind_shared)
-    elseif (LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_static OR HAVE_LIBUNWIND))
-      # libunwind is already included in libc++abi
-    else()
-      target_link_libraries(cxx_shared PUBLIC unwind)
-    endif()
-  endif()
+  #  if (LIBCXXABI_USE_LLVM_UNWINDER)
+  #    if (NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_shared OR HAVE_LIBUNWIND))
+  #      target_link_libraries(cxx_shared PUBLIC unwind_shared)
+  #    elseif (LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_static OR HAVE_LIBUNWIND))
+  #      # libunwind is already included in libc++abi
+  #    else()
+  #      target_link_libraries(cxx_shared PUBLIC unwind)
+  #    endif()
+  #  endif()
 
   # Link against libc++abi
-  if (LIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY)
-    if (APPLE)
-      target_link_libraries(cxx_shared PRIVATE "-Wl,-force_load" "${LIBCXX_CXX_STATIC_ABI_LIBRARY}")
-    else()
-      target_link_libraries(cxx_shared PRIVATE "-Wl,--whole-archive,-Bstatic" "${LIBCXX_CXX_STATIC_ABI_LIBRARY}" "-Wl,-Bdynamic,--no-whole-archive")
-    endif()
-  else()
-    target_link_libraries(cxx_shared PUBLIC "${LIBCXX_CXX_SHARED_ABI_LIBRARY}")
-  endif()
+  #  if (LIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY)
+  #    if (APPLE)
+  #      target_link_libraries(cxx_shared PRIVATE "-Wl,-force_load" "${LIBCXX_CXX_STATIC_ABI_LIBRARY}")
+  #    else()
+  #      target_link_libraries(cxx_shared PRIVATE "-Wl,--whole-archive,-Bstatic" "${LIBCXX_CXX_STATIC_ABI_LIBRARY}" "-Wl,-Bdynamic,--no-whole-archive")
+  #    endif()
+  #  else()
+  #    target_link_libraries(cxx_shared PUBLIC "${LIBCXX_CXX_SHARED_ABI_LIBRARY}")
+  #  endif()
 
   # Maybe re-export symbols from libc++abi
   if (APPLE AND (LIBCXX_CXX_ABI_LIBNAME STREQUAL "libcxxabi" OR
+++ src/libcxxabi/src/CMakeLists.txt	2023-01-31 11:02:42.227672559 +0100
@@ -73,27 +73,27 @@
   add_library_flags_if(LIBCXXABI_HAS_C_LIB c)
 endif()
 
-if (LIBCXXABI_USE_LLVM_UNWINDER)
-  # Prefer using the in-tree version of libunwind, either shared or static. If
-  # none are found fall back to using -lunwind.
-  # FIXME: Is it correct to prefer the static version of libunwind?
-  if (NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_shared OR HAVE_LIBUNWIND))
-    list(APPEND LIBCXXABI_SHARED_LIBRARIES unwind_shared)
-  elseif (LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_static OR HAVE_LIBUNWIND))
-    list(APPEND LIBCXXABI_SHARED_LIBRARIES unwind_static)
-  else()
-    list(APPEND LIBCXXABI_SHARED_LIBRARIES unwind)
-  endif()
-  if (NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY AND (TARGET unwind_shared OR HAVE_LIBUNWIND))
-    list(APPEND LIBCXXABI_STATIC_LIBRARIES unwind_shared)
-  elseif (LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY AND (TARGET unwind_static OR HAVE_LIBUNWIND))
-      # We handle this by directly merging libunwind objects into libc++abi.
-  else()
-    list(APPEND LIBCXXABI_STATIC_LIBRARIES unwind)
-  endif()
-else()
-  add_library_flags_if(LIBCXXABI_HAS_GCC_S_LIB gcc_s)
-endif()
+#if (LIBCXXABI_USE_LLVM_UNWINDER)
+#  # Prefer using the in-tree version of libunwind, either shared or static. If
+#  # none are found fall back to using -lunwind.
+#  # FIXME: Is it correct to prefer the static version of libunwind?
+#  if (NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_shared OR HAVE_LIBUNWIND))
+#    list(APPEND LIBCXXABI_SHARED_LIBRARIES unwind_shared)
+#  elseif (LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_static OR HAVE_LIBUNWIND))
+#    list(APPEND LIBCXXABI_SHARED_LIBRARIES unwind_static)
+#  else()
+#    list(APPEND LIBCXXABI_SHARED_LIBRARIES unwind)
+#  endif()
+#  if (NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY AND (TARGET unwind_shared OR HAVE_LIBUNWIND))
+#    list(APPEND LIBCXXABI_STATIC_LIBRARIES unwind_shared)
+#  elseif (LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_STATIC_LIBRARY AND (TARGET unwind_static OR HAVE_LIBUNWIND))
+#      # We handle this by directly merging libunwind objects into libc++abi.
+#  else()
+#    list(APPEND LIBCXXABI_STATIC_LIBRARIES unwind)
+#  endif()
+#else()
+#  add_library_flags_if(LIBCXXABI_HAS_GCC_S_LIB gcc_s)
+#endif()
 if (MINGW)
   # MINGW_LIBRARIES is defined in config-ix.cmake
   list(APPEND LIBCXXABI_LIBRARIES ${MINGW_LIBRARIES})
