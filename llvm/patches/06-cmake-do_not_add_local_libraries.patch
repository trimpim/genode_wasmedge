+++ src/libcxx/src/CMakeLists.txt	2023-02-01 14:24:45.048032259 +0100
@@ -178,6 +178,7 @@
   cxx_set_common_defines(cxx_shared)
 
   # Link against LLVM libunwind
+  if (NOT GENODE)
   if (LIBCXXABI_USE_LLVM_UNWINDER)
     if (NOT LIBCXXABI_STATICALLY_LINK_UNWINDER_IN_SHARED_LIBRARY AND (TARGET unwind_shared OR HAVE_LIBUNWIND))
       target_link_libraries(cxx_shared PUBLIC unwind_shared)
@@ -187,8 +188,10 @@
       target_link_libraries(cxx_shared PUBLIC unwind)
     endif()
   endif()
+  endif(GENODE)
 
   # Link against libc++abi
+  if (NOT GENODE)
   if (LIBCXX_STATICALLY_LINK_ABI_IN_SHARED_LIBRARY)
     if (APPLE)
       target_link_libraries(cxx_shared PRIVATE "-Wl,-force_load" "${LIBCXX_CXX_STATIC_ABI_LIBRARY}")
@@ -198,6 +201,7 @@
   else()
     target_link_libraries(cxx_shared PUBLIC "${LIBCXX_CXX_SHARED_ABI_LIBRARY}")
   endif()
+  endif(GENODE)
 
   # Maybe re-export symbols from libc++abi
   if (APPLE AND (LIBCXX_CXX_ABI_LIBNAME STREQUAL "libcxxabi" OR
+++ src/libcxxabi/src/CMakeLists.txt	2023-02-01 14:23:28.978722999 +0100
@@ -73,6 +73,7 @@
   add_library_flags_if(LIBCXXABI_HAS_C_LIB c)
 endif()
 
+if (NOT GENODE)
 if (LIBCXXABI_USE_LLVM_UNWINDER)
   # Prefer using the in-tree version of libunwind, either shared or static. If
   # none are found fall back to using -lunwind.
@@ -94,6 +95,7 @@
 else()
   add_library_flags_if(LIBCXXABI_HAS_GCC_S_LIB gcc_s)
 endif()
+endif(GENODE)
 if (MINGW)
   # MINGW_LIBRARIES is defined in config-ix.cmake
   list(APPEND LIBCXXABI_LIBRARIES ${MINGW_LIBRARIES})
