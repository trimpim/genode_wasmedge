+++ src/CMakeLists.txt	2022-11-28 11:05:51.800754263 +0100
@@ -0,0 +1,88 @@
+cmake_minimum_required(VERSION 3.13.4)
+
+add_definitions(-U__linux -U__linux__ -D__GENODE__ -D_LIBCPP_HAS_NO_TREE_BARRIER)
+
+set(CMAKE_BUILD_WITH_INSTALL_NAME_DIR ON)
+
+if(NOT DEFINED LLVM_VERSION_MAJOR)
+  set(LLVM_VERSION_MAJOR 15)
+endif()
+
+if(NOT DEFINED LLVM_VERSION_MINOR)
+  set(LLVM_VERSION_MINOR 0)
+endif()
+
+if(NOT DEFINED LLVM_VERSION_PATCH)
+  set(LLVM_VERSION_PATCH 2)
+endif()
+
+if(NOT DEFINED LLVM_VERSION_SUFFIX)
+  set(LLVM_VERSION_SUFFIX)
+endif()
+
+if (NOT PACKAGE_VERSION)
+  set(PACKAGE_VERSION
+    "${LLVM_VERSION_MAJOR}.${LLVM_VERSION_MINOR}.${LLVM_VERSION_PATCH}${LLVM_VERSION_SUFFIX}")
+endif()
+
+project(LLVM
+  VERSION ${LLVM_VERSION_MAJOR}.${LLVM_VERSION_MINOR}.${LLVM_VERSION_PATCH}
+  LANGUAGES C CXX ASM)
+
+# Must go after project(..)
+include(GNUInstallDirs)
+
+set(CMAKE_CXX_STANDARD                        14)
+set(CMAKE_CXX_STANDARD_REQUIRED               YES)
+set(CMAKE_CXX_EXTENSIONS                      ON)
+set(CMAKE_SYSTEM_PROCESSOR                    "x86_64")
+
+#set(COMPILER_RT_USE_LIBCXX                   ON)
+#set(COMPILER_RT_USE_BUILTINS_LIBRARY         ON)
+#set(COMPILER_RT_SANITIZERS_TO_BUILD          "")
+#set(COMPILER_RT_BAREMETAL_BUILD              ON)
+#set(COMPILER_RT_INCLUDE_TESTS                OFF)
+#set(COMPILER_RT_ENABLE_WERROR                ON)
+#set(COMPILER_RT_DEFAULT_TARGET_TRIPLE        "x86_64-unknown-genode")
+
+set(LIBUNWIND_ENABLE_SHARED                   ON)
+set(LIBUNWIND_ENABLE_STATIC                   OFF)
+set(LIBUNWIND_ENABLE_THREADS                  ON)
+set(LIBUNWIND_USE_COMPILER_RT                 OFF)
+set(LIBUNWIND_TARGET_TRIPPLE                  "x86_64-unknown-genode")
+
+set(LIBCXXABI_ENABLE_SHARED                   ON)
+set(LIBCXXABI_ENABLE_STATIC                   OFF)
+set(LIBCXXABI_ENABLE_THREADS                  ON)
+set(LIBCXXABI_HAS_PTHREAD_API                 ON)
+set(LIBCXXABI_BAREMETAL                       ON)
+set(LIBCXXABI_USE_LLVM_UNWINDER               ON)
+set(LIBCXXABI_USE_COMPILER_RT                 OFF)
+set(LIBCXXABI_LIBCXX_INCLUDES                 "${CMAKE_CURRENT_SOURCE_DIR}/libcxx")
+set(LIBCXXABI_INSTALL_HEADERS                 ON)
+set(LIBCXXABI_TARGET_TRIPPLE                  "x86_64-unknown-genode")
+
+set(LIBCXX_ENABLE_SHARED                      ON)
+set(LIBCXX_ENABLE_STATIC                      OFF)
+set(LIBCXX_CXX_ABI                            "libcxxabi")
+set(LIBCXX_ENABLE_STATIC_ABI_LIBRARY          OFF)
+set(LIBCXX_ENABLE_THREADS                     ON)
+set(LIBCXX_HAS_PTHREAD_API                    OFF)
+set(LIBCXX_ENABLE_THREAD_UNSAFE_C_FUNCTIONS   OFF)
+set(LIBCXX_ENABLE_MONOTONIC_CLOCK             ON)
+set(LIBCXX_ENABLE_FILESYSTEM                  ON)
+set(LIBCXX_HAS_MUSL_LIBC                      OFF)
+set(LIBCXX_USE_COMPILER_RT                    OFF)
+set(LIBCXX_INCLUDE_BENCHMARKS                 OFF)
+set(LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY        OFF)
+set(LIBCXX_ENABLE_ABI_LINKER_SCRIPT           OFF)
+set(LIBCXX_TARGET_TRIPPLE                     "x86_64-unknown-genode")
+
+#add_subdirectory(compiler-rt)
+add_subdirectory(libunwind)
+add_subdirectory(libcxxabi)
+add_subdirectory(libcxx)
+
+target_include_directories(cxxabi_shared PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/libcxx/include")
+target_include_directories(cxx_shared PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/libcxxabi/include")
+target_include_directories(cxx_shared PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/libcxx/include")
